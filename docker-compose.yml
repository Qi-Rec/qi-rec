services:
  fastapi:
    container_name: ml-fastapi
    build:
      context: .
      dockerfile: ./ml/Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - ./ml:/app
    depends_on:
      - mlflow
    environment:
      - MLFLOW_TRACKING_URI=http://mlflow:5001
      - experiment_name=song_recommender
      - bucket_name=smc-finalproject
      - region=eu-north-1

  mlflow:
    container_name: ml-mlflow
    build:
      context: .
      dockerfile: ./ml/mlflow.Dockerfile
    ports:
      - "5001:5001"
    volumes:
      - ./ml/versioning/mlruns:/mlflow/mlruns
      - ./ml/versioning/mlflow.db:/mlflow/mlflow.db
      - ./ml/versioning/mlflow_config.yaml:/mlflow/mlflow_config.yaml
  backend:
    container_name: backend-general
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    depends_on:
      postgres:
        condition: service_healthy
  postgres:
    container_name: postgres-container
    image: 'postgres:latest'
    volumes:
      - postgresVolume:/var/lib/postgresql/data
    env_file:
      - ./backend/.env
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: always
  frontend:
    container_name: frontend-vue
    build:
      context: ./frontend/qirec-front
      dockerfile: Dockerfile
    ports:
      - "8080:80"
    depends_on:
      - backend

  mongo:
    image: mongo
    container_name: mongo-db
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db

volumes:
  postgresVolume:
  mongo-data: